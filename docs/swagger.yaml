definitions:
  internal_controllers.ChallengeResponse:
    properties:
      challenge:
        description: Challenge is the message to be signed.
        type: string
      expiresAt:
        description: ExpiresAt is the time at which the signed challenge will no longer
          be accepted.
        type: string
    type: object
  internal_controllers.CheckEmailRequest:
    properties:
      address:
        description: Address is the email address to check. Must be confirmed.
        type: string
    type: object
  internal_controllers.CheckEmailResponse:
    properties:
      inUse:
        description: InUse specifies whether the email is attached to a DIMO user.
        type: boolean
    type: object
  internal_controllers.ConfirmEmailRequest:
    properties:
      key:
        description: Key is the 6-digit number from the confirmation email
        example: "010990"
        type: string
    type: object
  internal_controllers.ConfirmEthereumRequest:
    properties:
      signature:
        description: |-
          Signature is the result of signing the provided challenge message using the address in
          question.
        type: string
    type: object
  internal_controllers.ErrorResponse:
    properties:
      errorMessage:
        type: string
    type: object
  internal_controllers.SubmitReferralCodeRequest:
    properties:
      referralCode:
        description: ReferralCode is the 6-digit, alphanumeric referral code from
          another user.
        example: ANB95N
        type: string
    type: object
  internal_controllers.SubmitReferralCodeResponse:
    properties:
      message:
        type: string
    type: object
  internal_controllers.UserResponse:
    properties:
      agreedTosAt:
        description: AgreedTosAt is the time at which the user last agreed to the
          terms of service.
        example: "2021-12-01T09:00:41Z"
        type: string
      countryCode:
        description: CountryCode, if present, is a valid ISO 3166-1 alpha-3 country
          code.
        example: USA
        type: string
      createdAt:
        description: CreatedAt is when the user first logged in.
        example: "2021-12-01T09:00:00Z"
        type: string
      email:
        allOf:
        - $ref: '#/definitions/internal_controllers.UserResponseEmail'
        description: Email describes the user's email and the state of its confirmation.
      id:
        description: ID is the user's DIMO-internal ID.
        example: ChFrb2JsaXR6QGRpbW8uem9uZRIGZ29vZ2xl
        type: string
      migratedAt:
        example: "2024-09-17T09:00:00Z"
        type: string
      referralCode:
        description: |-
          ReferralCode is the user's referral code to be given to others. It is an 8 alphanumeric code,
          only present if the account has a confirmed Ethereum address.
        example: ANB95N
        type: string
      referredAt:
        example: "2021-12-01T09:00:41Z"
        type: string
      referredBy:
        example: 0x3497B704a954789BC39999262510DE9B09Ff1366
        type: string
      web3:
        allOf:
        - $ref: '#/definitions/internal_controllers.UserResponseWeb3'
        description: Web3 describes the user's blockchain account.
    type: object
  internal_controllers.UserResponseEmail:
    properties:
      address:
        description: Address is the email address for the user.
        example: koblitz@dimo.zone
        type: string
      confirmationSentAt:
        description: |-
          ConfirmationSentAt is the time at which we last sent a confirmation email. This will only
          be present if we've sent an email but the code has not been sent back to us.
        example: "2021-12-01T09:01:12Z"
        type: string
      confirmed:
        description: Confirmed indicates whether the user has confirmed the address
          by entering a code.
        example: false
        type: boolean
    type: object
  internal_controllers.UserResponseWeb3:
    properties:
      address:
        description: Address is the Ethereum address associated with the user.
        example: 0x142e0C7A098622Ea98E5D67034251C4dFA746B5d
        type: string
      challengeSentAt:
        description: |-
          ChallengeSentAt is the time at which we last generated a challenge message for the user to
          sign. This will only be present if we've generated such a message but a signature has not
          been sent back to us.
        example: "2021-12-01T09:01:12Z"
        type: string
      confirmed:
        description: |-
          Confirmed indicates whether the user has confirmed the address by signing a challenge
          message.
        example: false
        type: boolean
      inApp:
        description: InApp indicates whether this is an in-app wallet, managed by
          the DIMO app.
        example: false
        type: boolean
      used:
        description: |-
          Used indicates whether the user has used this address to perform any on-chain
          actions like minting, claiming, or pairing.
        example: false
        type: boolean
    type: object
  internal_controllers.UserUpdateRequest:
    properties:
      countryCode:
        description: CountryCode, if specified, should be a valid ISO 3166-1 alpha-3
          country code
        example: USA
        type: string
      email:
        properties:
          address:
            description: |-
              Address, if present, should be a valid email address. Note when this field
              is modified the user's verification status will reset.
            example: neal@dimo.zone
            type: string
        type: object
      web3:
        properties:
          address:
            description: |-
              Address, if present, should be a valid ethereum address. Note when this field
              is modified the user's address verification status will reset.
            example: 0x71C7656EC7ab88b098defB751B7401B5f6d8976F
            type: string
          inApp:
            description: |-
              InApp, if true, indicates that the address above corresponds to an in-app wallet.
              You can only set this when setting a new wallet. It defaults to false.
            example: true
            type: boolean
        type: object
    type: object
info:
  contact: {}
  title: DIMO User API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
  /v1/check-email:
    post:
      parameters:
      - description: Specify the email to check.
        in: body
        name: checkEmailRequest
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.CheckEmailRequest'
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.CheckEmailResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Get attributes for the authenticated user. If multiple records for
        the same user, gets the one with the email confirmed.
  /v1/user:
    delete:
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "409":
          description: Returned if the user still has devices.
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Delete the authenticated user. Fails if the user has any devices.
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.UserResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get attributes for the authenticated user. If multiple records for
        the same user, gets the one with the email confirmed.
    put:
      consumes:
      - application/json
      parameters:
      - description: New field values
        in: body
        name: userUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.UserResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Modify attributes for the authenticated user
  /v1/user/agree-tos:
    post:
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Agree to the current terms of service
  /v1/user/confirm-email:
    post:
      consumes:
      - application/json
      parameters:
      - description: Specifies the key from the email
        in: body
        name: confirmEmailRequest
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.ConfirmEmailRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Submit an email confirmation key
  /v1/user/send-confirmation-email:
    post:
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Send a confirmation email to the authenticated user
  /v1/user/set-migrated:
    post:
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Sets the migration timestamp.
  /v1/user/submit-referral-code:
    post:
      parameters:
      - description: ReferralCode is the 6-digit, alphanumeric referral code from
          another user.
        in: body
        name: submitReferralCodeRequest
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.SubmitReferralCodeRequest'
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.SubmitReferralCodeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Takes the referral code, validates and stores it
  /v1/user/web3/challenge/generate:
    post:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.ChallengeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Generate a challenge message for the user to sign.
  /v1/user/web3/challenge/submit:
    post:
      parameters:
      - description: Signed challenge message
        in: body
        name: confirmEthereumRequest
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.ConfirmEthereumRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      summary: Confirm ownership of an ethereum address by submitting a signature
  /v2/user:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.UserResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/internal_controllers.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get attributes for the authenticated user. If multiple records for
        the same user, gets the one with the email confirmed.
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
